{"version":3,"sources":["components/FilterInput.js","components/NewPersonInput.js","components/Person.js","components/ContactsDisplay.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["FilterInput","props","value","filterTerm","onChange","handleFilterTermChange","NewPersonInput","onSubmit","addPerson","newPersonName","handleNameChange","newPersonPhone","handlePhoneChange","type","Person","person","deletePerson","className","name","number","onClick","ContactsDisplay","personsToDisplay","map","id","Notification","message","baseURL","axios","get","newPerson","post","put","console","log","delete","App","useState","persons","setPersons","setNewPersonName","setNewPersonPhone","setFilterTerm","notificationMessage","setNotificationMessage","notificationClassName","setNotificationClassName","useEffect","personService","then","response","data","filter","toLowerCase","includes","displayNotification","messageType","setTimeout","event","preventDefault","personObject","window","confirm","personToUpdate","find","changedPerson","p","catch","error","concat","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92144f8b.chunk.js","sourcesContent":["import React from 'react'\n\nconst FilterInput = (props) => {\n    return (\n        <form>\n            filter:<input value = {props.filterTerm} onChange = {props.handleFilterTermChange}/>\n        </form>\n    )\n}\nexport default FilterInput","import React from 'react'\n\nconst NewPersonInput = (props) => {\n    return (\n        <form onSubmit = {props.addPerson}>\n        <div>\n          name: <input value = {props.newPersonName} onChange = {props.handleNameChange}/>\n        </div>\n        <div>\n          phone:<input value = {props.newPersonPhone} onChange = {props.handlePhoneChange}/>\n        </div>\n        <div>\n          <button type = \"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default NewPersonInput","import React from 'react'\n\nconst Person = ({person, deletePerson}) => {\n    return (\n        <p className = 'person'>\n            {person.name}: {person.number}\n            <button onClick = {deletePerson}>delete</button>\n        </p>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst ContactsDisplay = (props) => {\n    return (\n        props.personsToDisplay.map(person => <Person key = {person.name} person = {person} deletePerson = {() => props.deletePerson(person.id)}/>)\n    )\n}\n\nexport default ContactsDisplay","import React from 'react'\n\nconst Notification = ({message, className}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className = {className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseURL)\n}\n\nconst createPerson = newPerson => {\n    return axios.post(baseURL, newPerson)\n}\n\nconst updatePerson = (id, newPerson) => {\n    return axios.put(`${baseURL}/${id}`, newPerson)\n}\n\nconst deletePerson = (id) => {\n    console.log(`deleting ${baseURL}/${id}`)\n    return axios.delete(`${baseURL}/${id}`)\n}\n\nexport default {\n    getAll, createPerson, updatePerson, deletePerson\n}","import React, {useState, useEffect} from 'react'\n\nimport FilterInput from './components/FilterInput'\nimport NewPersonInput from './components/NewPersonInput'\nimport ContactsDisplay from './components/ContactsDisplay'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = (props) => {\n  const [persons, setPersons] = useState([]) \n  const [newPersonName, setNewPersonName] = useState('')\n  const [newPersonPhone, setNewPersonPhone] = useState('')\n  const [filterTerm, setFilterTerm] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationClassName, setNotificationClassName] = useState('notification')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const personsToDisplay = persons.filter(\n    person => person.name.toLowerCase().includes(filterTerm.toLowerCase())\n    )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    const personObject = {\n      name: newPersonName,\n      number: newPersonPhone\n    }\n\n    if (newPersonName !== '') {\n      const names = persons.map(person => person.name)\n\n      if (names.includes(newPersonName)) {\n        if (window.confirm(\n          `${newPersonName} is already added to the phonebook. Replace the number with a new one?`)\n          ) {\n            const personToUpdate = persons.find(person => person.name === newPersonName)\n            const changedPerson = {...personToUpdate, number: newPersonPhone}\n\n            personService\n              .updatePerson(personToUpdate.id, changedPerson)\n              .then(response => {\n                setPersons(persons.map(p => p.id !== personToUpdate.id ? p : response.data))\n\n                const message = `${personToUpdate.name} updated`\n                displayNotification(message, 'notification')\n              })\n              .catch(error => {\n                const message = `${personToUpdate.name} was already removed from phonebook`\n                displayNotification(message, 'error-notification')\n                setPersons(persons.filter(p => p.id !== personToUpdate.id))\n              })\n          }\n      } else {\n        personService\n          .createPerson(personObject)\n          .then(response => {\n            setPersons(persons.concat(response.data))\n\n            const message = `${personObject.name} added to phonebook`\n            displayNotification(message, 'notification')\n          })\n      }\n    }\n\n    setNewPersonName('')\n    setNewPersonPhone('')\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .deletePerson(person.id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n\n        const message = `${person.name} deleted`\n        displayNotification(message, 'notification')\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewPersonName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPersonPhone(event.target.value)\n  }\n\n  const handleFilterTermChange = (event) => {\n    setFilterTerm(event.target.value)\n    console.log(filterTerm)\n  }\n\n  const displayNotification = (message, messageType) => {\n    setNotificationMessage(message)\n    setNotificationClassName(messageType)\n                \n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message = {notificationMessage} className = {notificationClassName}/>\n\n      <NewPersonInput addPerson = {addPerson} newPersonName = {newPersonName} newPersonPhone = {newPersonPhone}\n      handleNameChange = {handleNameChange} handlePhoneChange = {handlePhoneChange}/>\n\n      <h2>Phone Numbers</h2>\n\n      <FilterInput filterTerm = {filterTerm} handleFilterTermChange = {handleFilterTermChange}\n      personsToDisplay = {personsToDisplay}/>\n      \n      <ContactsDisplay personsToDisplay = {personsToDisplay} deletePerson = {deletePerson}/>\n    </>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}